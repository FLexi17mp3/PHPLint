name: 'Code Quality'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  code-quality-81:
    runs-on: ubuntu-latest
    steps:
      - name: PHP-Setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Composer cache packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Composer install
        run: |
          composer install --prefer-dist --no-progress

      - name: Run RectorPHP
        run: composer rector-dry

      - name: Run PHPStan
        run: composer phpstan

      - name: Run ECS
        run: composer ecs-dry

      - name: Run PHPUnitTests
        run: composer unittest

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  code-quality-82:
    runs-on: ubuntu-latest
    steps:
      - name: PHP-Setup
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Composer cache packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Composer install
        run: |
          composer install --prefer-dist --no-progress

      - name: Run RectorPHP
        run: composer rector-dry

      - name: Run PHPStan
        run: composer phpstan

      - name: Run ECS
        run: composer ecs-dry

      - name: Run PHPUnitTests
        run: composer unittest

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}